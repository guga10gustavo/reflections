How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    A partir desse comando é possivel anlisar visivelmente as difenrenças entre os dois arquivos por meio do prompt de comando e assim vemos as possíveis mudanças que podem ter causado um bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Por meio do conhecimento de toda a historia do arquivo pode-se ter em mente os objetivo da criação de tal codigo por exemplo, algum bug que pode nao ter sido retirado  ou como esse bug foi resolvido,além de compreender o metodo de construção do projeto.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Um fator a favor é que o Git da ao usuario historico das mudanças e autonomia,porém um fator contra é que aumenta a responsabilidade do usuario ao criar e modificar o arquivo.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Porque este fato permite ao usuario comparar varias mudanças feitas em um so projeto.

How can you use the commands git log and git diff to view the history of files?

    O comando git log mostra  o mesmo projetos e exibe os commits dele.Já o git diff mostra a diferença entre dois commits ID.

How might using version control make you more confident to make changes that
could break something?

    Usar uma versão de controle garante que não eu modificarei o arquivo mas tambem outros pessoas e apos isso é possivel comparar as mudanças e analisa-las.
Now that you have your workspace set up, what do you want to try using Git for?

    Eu quero tentar usar o Git para conseguir produzir projetos maiores e com maior velocidade de criação.
____________________________________________________________________________________________________________
Como ter fácil acesso a todo o histórico de um arquivo pode torná-lo um programador mais eficiente no longo prazo?

    Por meio do acesso facil ao historico do arquivo torna-se mais facil comparar varias versoes do mesmo projeto e observar as modificações, tornado mais facil encontrar erros.

Na sua opinião, quais são os prós e contras de escolher manualmente quando criar um commit, como ocorre no Git, v. o salvamento automático de versões, como no Google Docs?

    Os pros da escolha de quando criar um commit manualmente são que isso permite ao usuario modificar o arquivo de forma que se tenha mais controle sobre ele,porem um contra é que o usuario deve estar atento ao tamanho do commit cridado pois se ele for muito grande isso dificulta o seu entendimento em comparação com outro commit.

Por que você acha que alguns sistemas de controle de versão, como o Git, permitem salvar vários arquivos em um commit, enquanto outros, como o Google Docs, tratam cada arquivo separadamente?

    Porque isso permite ao usuario uma maior facilidade e velocidade para altera um projeto ja que todos os arquivos referente ao projeto se encontram em um commit, facilitando assim a comparação entre eles.

Como usar os comandos git log e git diff para visualizar o histórico dos arquivos?

    Para usar os comando git log primeiro temos que usar "cd nome_pasta" e depois digitar o comando git log.Já o git diff devemos colocar o apos ele os dois ID's dos commits que deseja-se comparar.

De que modo o controle de versão pode dar a você mais segurança para fazer alterações que podem danificar algo?

     Dessa forma se ocorer uma mudança critica,que danifique o codigo, por meio dessa ferramenta torna-se possivel recuperar um versao antiga nao danificada, ou seja, um commit anterior.

Agora que você já configurou a sua área de trabalho, você quer usar o Git para quê?

    Quero usa-lo para acessar arquivo e abrí-los mais rapidamente para assim fazer os projetos com maior velocidade.